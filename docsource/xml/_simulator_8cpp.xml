<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_simulator_8cpp" kind="file" language="C++">
    <compoundname>Simulator.cpp</compoundname>
    <includes refid="_simulator_8h" local="yes">Simulator.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="5">
        <label>Logger.h</label>
        <link refid="_logger_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp</label>
        <link refid="_simulator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Simulator.h</label>
        <link refid="_simulator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Print.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_simulator_8cpp_1a5de940f4d5e50fe83402a7b65216acf2" prot="public" static="no">
        <name>MAX_PERCENT_DEFECT</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="2" column="11" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_simulator_8cpp_1ac377db81b810bff5ff74221befd2ccc0" prot="public" static="no">
        <name>AVG</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="17" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_simulator_8cpp_1a6081907e729b8745b52bd2883301bedf" prot="public" static="no">
        <name>AVD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="18" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_simulator_8cpp_1a15daceb4f37933a09e36c0bfc3e32a98" prot="public" static="no">
        <name>ARG</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="19" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_simulator_8cpp_1aa9701b150e0589afb638c82a498d1dcb" prot="public" static="no">
        <name>ARD</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="20" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_simulator_8cpp_1a303eae0da1ba8b57c3665fc49a209c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool outOfBound</definition>
        <argsstring>(Vector v, Vector *out)</argsstring>
        <name>outOfBound</name>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="class_vector" kindref="compound">Vector</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" line="21" column="6" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp" bodystart="21" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Simulator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PERCENT_DEFECT<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Simulator::Simulator(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mass,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxAcceleration,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxSpeed</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_cinetique" kindref="compound">Cinetique</ref><sp/>*<sp/>cinetique,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>orderMotorLeft,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>orderMotorRight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>health)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size=size;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mass=mass;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;maxMotorForce=maxAcceleration*mass;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;J=mass*size*size/6.0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;friction=maxMotorForce/maxSpeed;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;health=health;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cinetique=cinetique;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;orderMotorLeft=orderMotorLeft;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;orderMotorRight=orderMotorRight;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVD<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARG<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARD<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outOfBound(<ref refid="class_vector" kindref="compound">Vector</ref><sp/>v,<sp/><ref refid="class_vector" kindref="compound">Vector</ref>*<sp/>out){<sp/></highlight><highlight class="comment">//Dit<sp/>si<sp/>le<sp/>vector<sp/>est<sp/>out<sp/>of<sp/>bound<sp/>et<sp/>donne<sp/>la<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v._x&lt;0){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_x=-v._x;<sp/>out-&gt;<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>=0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v._x&gt;3){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_x=3.0-v._x;out-&gt;<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>=0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>&lt;0){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_x=0;out-&gt;<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>=-v.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>&gt;2){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;_x=0;out-&gt;<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>=2.0<sp/>-<sp/>v.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Simulator::computeCollision(){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vector" kindref="compound">Vector</ref><sp/>coins[4];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>coins[AVG]<sp/>=<sp/>(<ref refid="class_vector" kindref="compound">Vector</ref>)*cinetique<sp/>+<sp/><ref refid="class_vector" kindref="compound">Vector</ref>(-size/2.0,size/2.0).<ref refid="class_vector_1a3879877fbfc3752e7ca1b64af6d557e6" kindref="member">rotate</ref>(cinetique-&gt;_theta);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>coins[AVD]<sp/>=<sp/>(<ref refid="class_vector" kindref="compound">Vector</ref>)*cinetique<sp/>+<sp/><ref refid="class_vector" kindref="compound">Vector</ref>(size/2.0,size/2.0).<ref refid="class_vector_1a3879877fbfc3752e7ca1b64af6d557e6" kindref="member">rotate</ref>(cinetique-&gt;_theta);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>coins[ARG]<sp/>=<sp/>(<ref refid="class_vector" kindref="compound">Vector</ref>)*cinetique<sp/>+<sp/><ref refid="class_vector" kindref="compound">Vector</ref>(-size/2.0,-size/2.0).<ref refid="class_vector_1a3879877fbfc3752e7ca1b64af6d557e6" kindref="member">rotate</ref>(cinetique-&gt;_theta);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>coins[ARD]<sp/>=<sp/>(<ref refid="class_vector" kindref="compound">Vector</ref>)*cinetique<sp/>+<sp/><ref refid="class_vector" kindref="compound">Vector</ref>(size/2.0,-size/2.0).<ref refid="class_vector_1a3879877fbfc3752e7ca1b64af6d557e6" kindref="member">rotate</ref>(cinetique-&gt;_theta);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vector" kindref="compound">Vector</ref><sp/>out;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;4;i++)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outOfBound(coins[i],&amp;out))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinetique-&gt;_x<sp/>=<sp/>((<ref refid="class_vector" kindref="compound">Vector</ref>)(*cinetique)<sp/>+<sp/>out)._x;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinetique-&gt;<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref><sp/>=<sp/>((<ref refid="class_vector" kindref="compound">Vector</ref>)(*cinetique)<sp/>+<sp/>out)._y;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Simulator::updateCinetique(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vLeft,vRight;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>vLeft=cinetique-&gt;<ref refid="class_cinetique_1a7fbbeae0349326d9ba8c8677a775f0ab" kindref="member">_v</ref><sp/>-<sp/>cinetique-&gt;<ref refid="class_cinetique_1a605427ec93a1ea4b2460d0f6307e1e31" kindref="member">_w</ref>*size/2;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>vRight=cinetique-&gt;<ref refid="class_cinetique_1a7fbbeae0349326d9ba8c8677a775f0ab" kindref="member">_v</ref><sp/>+<sp/>cinetique-&gt;<ref refid="class_cinetique_1a605427ec93a1ea4b2460d0f6307e1e31" kindref="member">_w</ref>*size/2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>forceLeft,forceRight;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>forceLeft=(*orderMotorLeft)*maxMotorForce<sp/>-<sp/>friction*(1<sp/>+<sp/>(1-health)*random(-MAX_PERCENT_DEFECT,MAX_PERCENT_DEFECT)/100)*vLeft;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>forceRight=(*orderMotorRight)*maxMotorForce<sp/>-<sp/>friction*(1<sp/>+<sp/>(1-health)*random(-MAX_PERCENT_DEFECT,MAX_PERCENT_DEFECT)/100)*vRight;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>force<sp/>=<sp/>(forceLeft<sp/>+<sp/>forceRight);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>moment<sp/>=<sp/>(forceRight-forceLeft)*size/2;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>cinetique-&gt;<ref refid="class_cinetique_1a7fbbeae0349326d9ba8c8677a775f0ab" kindref="member">_v</ref>+=force*dt/mass;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>cinetique-&gt;<ref refid="class_cinetique_1a605427ec93a1ea4b2460d0f6307e1e31" kindref="member">_w</ref>+=moment*dt/J;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cinetique-&gt;_theta+=cinetique-&gt;<ref refid="class_cinetique_1a605427ec93a1ea4b2460d0f6307e1e31" kindref="member">_w</ref>*dt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinetique)+=directeur(cinetique-&gt;_theta)*cinetique-&gt;<ref refid="class_cinetique_1a7fbbeae0349326d9ba8c8677a775f0ab" kindref="member">_v</ref>*dt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>computeCollision();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/Simulator/Simulator.cpp"/>
  </compounddef>
</doxygen>
