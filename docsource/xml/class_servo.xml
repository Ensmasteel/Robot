<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_servo" kind="class" language="C++" prot="public">
    <compoundname>Servo</compoundname>
    <includes refid="stm32f4_2_servo_timers_8h" local="no">ServoTimers.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_servo_1a01fa8c02563163757164771304f9ab3a" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Servo::servoIndex</definition>
        <argsstring></argsstring>
        <name>servoIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="115" column="12" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1a11ac140aa7696dc424526f4f4562853d" prot="private" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t Servo::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="116" column="11" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1a71f71fd80677c88515444c3b88b51a21" prot="private" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t Servo::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="117" column="11" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1aabd904a1373b391aadb91129f57e6243" prot="private" static="no" mutable="no">
        <type>int16</type>
        <definition>int16 Servo::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="196" column="11" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1ad7f01394d6b748df39bb571f95e4b8fa" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 Servo::minPW</definition>
        <argsstring></argsstring>
        <name>minPW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="197" column="12" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1a370524fd5161cbb0a90d639e976434d5" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 Servo::maxPW</definition>
        <argsstring></argsstring>
        <name>maxPW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="198" column="12" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1a8504056a79fed53f63ea22f32738947c" prot="private" static="no" mutable="no">
        <type>int16</type>
        <definition>int16 Servo::minAngle</definition>
        <argsstring></argsstring>
        <name>minAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="199" column="11" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_servo_1ada5cc58bbe42be8811d2823c08889810" prot="private" static="no" mutable="no">
        <type>int16</type>
        <definition>int16 Servo::maxAngle</definition>
        <argsstring></argsstring>
        <name>maxAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="200" column="11" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_servo_1a70b2b17657cf258cdcb57503bcf62cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Servo::Servo</definition>
        <argsstring>()</argsstring>
        <name>Servo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="105" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1aeccd2077f07ebc45250da14e72a0c461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Servo::attach</definition>
        <argsstring>(int pin)</argsstring>
        <name>attach</name>
        <param>
          <type>int</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="106" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a70076d9a77de97241badd1f377817219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Servo::attach</definition>
        <argsstring>(int pin, int min, int max)</argsstring>
        <name>attach</name>
        <param>
          <type>int</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="107" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a0b69ccc5c8b348ebaa84be91d973a362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::detach</definition>
        <argsstring>()</argsstring>
        <name>detach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="108" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a72b4b546912eada96a6ef705168ceb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::write</definition>
        <argsstring>(int value)</argsstring>
        <name>write</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="109" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1ac7fe3d6d2ea285ead98814bcfc417029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::writeMicroseconds</definition>
        <argsstring>(int value)</argsstring>
        <name>writeMicroseconds</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="110" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1aaca0af33ba7d7c87c8a785b8eabf95a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Servo::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="111" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a43950424d146c1414460066483d9561b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Servo::readMicroseconds</definition>
        <argsstring>()</argsstring>
        <name>readMicroseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="112" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a48607d47aa5678780b1b927102bd3b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Servo::attached</definition>
        <argsstring>()</argsstring>
        <name>attached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a70b2b17657cf258cdcb57503bcf62cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Servo::Servo</definition>
        <argsstring>()</argsstring>
        <name>Servo</name>
        <briefdescription>
<para>Construct a new <ref refid="class_servo" kindref="compound">Servo</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>The new instance will not be attached to any pin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="89" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1ae610bc76e895bd05fdc3618e33b90012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Servo::attach</definition>
        <argsstring>(uint8 pin, uint16 minPulseWidth=MIN_PULSE_WIDTH, uint16 maxPulseWidth=MAX_PULSE_WIDTH, int16 minAngle=MIN_ANGLE, int16 maxAngle=MAX_ANGLE)</argsstring>
        <name>attach</name>
        <param>
          <type>uint8</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint16</type>
          <declname>minPulseWidth</declname>
          <defval>MIN_PULSE_WIDTH</defval>
        </param>
        <param>
          <type>uint16</type>
          <declname>maxPulseWidth</declname>
          <defval>MAX_PULSE_WIDTH</defval>
        </param>
        <param>
          <type>int16</type>
          <declname>minAngle</declname>
          <defval>MIN_ANGLE</defval>
        </param>
        <param>
          <type>int16</type>
          <declname>maxAngle</declname>
          <defval>MAX_ANGLE</defval>
        </param>
        <briefdescription>
<para>Associate this instance with a servomotor whose input is connected to pin. </para>
        </briefdescription>
        <detaileddescription>
<para>If this instance is already attached to a pin, it will be detached before being attached to the new pin. This function doesn&apos;t detach any interrupt attached with the pin&apos;s timer channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin connected to the servo pulse wave input. This pin must be capable of PWM output.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minPulseWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum pulse width to write to pin, in microseconds. This will be associated with a minAngle degree angle. Defaults to SERVO_DEFAULT_MIN_PW = 544.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxPulseWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum pulse width to write to pin, in microseconds. This will be associated with a maxAngle degree angle. Defaults to SERVO_DEFAULT_MAX_PW = 2400.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minAngle</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_target" kindref="compound">Target</ref> angle (in degrees) associated with minPulseWidth. Defaults to SERVO_DEFAULT_MIN_ANGLE = 0.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxAngle</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_target" kindref="compound">Target</ref> angle (in degrees) associated with maxPulseWidth. Defaults to SERVO_DEFAULT_MAX_ANGLE = 180.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
@sideeffect May set pinMode(pin, PWM).</para>
<para><simplesect kind="return"><para>true if successful, false when pin doesn&apos;t support PWM. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1afa4042feca3c79ba934798961d202bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Servo::detach</definition>
        <argsstring>()</argsstring>
        <name>detach</name>
        <briefdescription>
<para>Stop driving the servo pulse train. </para>
        </briefdescription>
        <detaileddescription>
<para>If not currently attached to a motor, this function has no effect.</para>
<para><simplesect kind="return"><para>true if this call did anything, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="138" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1af69aba052f5907ef7fc3b6159e3b7726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::write</definition>
        <argsstring>(int angle)</argsstring>
        <name>write</name>
        <param>
          <type>int</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Set the servomotor target angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_target" kindref="compound">Target</ref> angle, in degrees. If the target angle is outside the range specified at attach() time, it will be clamped to lie in that range.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>Servo::attach() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a7d35c33a26697722dc0c7e6cdb66d299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::writeMicroseconds</definition>
        <argsstring>(uint16 pulseWidth)</argsstring>
        <name>writeMicroseconds</name>
        <param>
          <type>uint16</type>
          <declname>pulseWidth</declname>
        </param>
        <briefdescription>
<para>Set the pulse width, in microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pulseWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Pulse width to send to the servomotor, in microseconds. If outside of the range specified at attach() time, it is clamped to lie in that range.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>Servo::attach() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a95217e315c3189adb6528a3b9b347336" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Servo::read</definition>
        <argsstring>() const</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the servomotor&apos;s target angle, in degrees. This will lie inside the range specified at attach() time.</para>
<para><simplesect kind="see"><para>Servo::attach() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="169" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a95404e96cc304eca9596d4c7d13fe339" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 Servo::readMicroseconds</definition>
        <argsstring>() const</argsstring>
        <name>readMicroseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current pulse width, in microseconds. This will lie within the range specified at attach() time.</para>
<para><simplesect kind="see"><para>Servo::attach() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="177" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a243c190018cc807116ac4ca2c9b0f66e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Servo::attached</definition>
        <argsstring>() const</argsstring>
        <name>attached</name>
        <briefdescription>
<para>Check if this instance is attached to a servo. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if this instance is attached to a servo, false otherwise. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_servo_1a328ef929f144308a30476c587d71e9fc" kindref="member">Servo::attachedPin()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="185" column="10" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_servo_1a328ef929f144308a30476c587d71e9fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Servo::attachedPin</definition>
        <argsstring>() const</argsstring>
        <name>attachedPin</name>
        <briefdescription>
<para>Get the pin this instance is attached to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pin number if currently attached to a pin, NOT_ATTACHED otherwise. </para>
</simplesect>
<simplesect kind="see"><para>Servo::attach() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="193" column="9" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" bodystart="193" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_servo_1afe93cf982b228ea3a5510147de951a94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Servo::resetFields</definition>
        <argsstring>(void)</argsstring>
        <name>resetFields</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/stm32f4/ServoTimers.h" line="202" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class for interfacing with RC servomotors. </para>
    </detaileddescription>
    <location file="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" line="102" column="1" bodyfile="Ensmasteel_Bot_2020/Arduino_Mega/Lib/Servo/src/Servo.h" bodystart="103" bodyend="118"/>
    <listofallmembers>
      <member refid="class_servo_1aeccd2077f07ebc45250da14e72a0c461" prot="public" virt="non-virtual"><scope>Servo</scope><name>attach</name></member>
      <member refid="class_servo_1a70076d9a77de97241badd1f377817219" prot="public" virt="non-virtual"><scope>Servo</scope><name>attach</name></member>
      <member refid="class_servo_1ae610bc76e895bd05fdc3618e33b90012" prot="public" virt="non-virtual"><scope>Servo</scope><name>attach</name></member>
      <member refid="class_servo_1a48607d47aa5678780b1b927102bd3b1b" prot="public" virt="non-virtual"><scope>Servo</scope><name>attached</name></member>
      <member refid="class_servo_1a243c190018cc807116ac4ca2c9b0f66e" prot="public" virt="non-virtual"><scope>Servo</scope><name>attached</name></member>
      <member refid="class_servo_1a328ef929f144308a30476c587d71e9fc" prot="public" virt="non-virtual"><scope>Servo</scope><name>attachedPin</name></member>
      <member refid="class_servo_1a0b69ccc5c8b348ebaa84be91d973a362" prot="public" virt="non-virtual"><scope>Servo</scope><name>detach</name></member>
      <member refid="class_servo_1afa4042feca3c79ba934798961d202bea" prot="public" virt="non-virtual"><scope>Servo</scope><name>detach</name></member>
      <member refid="class_servo_1a71f71fd80677c88515444c3b88b51a21" prot="private" virt="non-virtual"><scope>Servo</scope><name>max</name></member>
      <member refid="class_servo_1ada5cc58bbe42be8811d2823c08889810" prot="private" virt="non-virtual"><scope>Servo</scope><name>maxAngle</name></member>
      <member refid="class_servo_1a370524fd5161cbb0a90d639e976434d5" prot="private" virt="non-virtual"><scope>Servo</scope><name>maxPW</name></member>
      <member refid="class_servo_1a11ac140aa7696dc424526f4f4562853d" prot="private" virt="non-virtual"><scope>Servo</scope><name>min</name></member>
      <member refid="class_servo_1a8504056a79fed53f63ea22f32738947c" prot="private" virt="non-virtual"><scope>Servo</scope><name>minAngle</name></member>
      <member refid="class_servo_1ad7f01394d6b748df39bb571f95e4b8fa" prot="private" virt="non-virtual"><scope>Servo</scope><name>minPW</name></member>
      <member refid="class_servo_1aabd904a1373b391aadb91129f57e6243" prot="private" virt="non-virtual"><scope>Servo</scope><name>pin</name></member>
      <member refid="class_servo_1aaca0af33ba7d7c87c8a785b8eabf95a7" prot="public" virt="non-virtual"><scope>Servo</scope><name>read</name></member>
      <member refid="class_servo_1a95217e315c3189adb6528a3b9b347336" prot="public" virt="non-virtual"><scope>Servo</scope><name>read</name></member>
      <member refid="class_servo_1a43950424d146c1414460066483d9561b" prot="public" virt="non-virtual"><scope>Servo</scope><name>readMicroseconds</name></member>
      <member refid="class_servo_1a95404e96cc304eca9596d4c7d13fe339" prot="public" virt="non-virtual"><scope>Servo</scope><name>readMicroseconds</name></member>
      <member refid="class_servo_1afe93cf982b228ea3a5510147de951a94" prot="private" virt="non-virtual"><scope>Servo</scope><name>resetFields</name></member>
      <member refid="class_servo_1a70b2b17657cf258cdcb57503bcf62cd2" prot="public" virt="non-virtual"><scope>Servo</scope><name>Servo</name></member>
      <member refid="class_servo_1a70b2b17657cf258cdcb57503bcf62cd2" prot="public" virt="non-virtual"><scope>Servo</scope><name>Servo</name></member>
      <member refid="class_servo_1a01fa8c02563163757164771304f9ab3a" prot="private" virt="non-virtual"><scope>Servo</scope><name>servoIndex</name></member>
      <member refid="class_servo_1a72b4b546912eada96a6ef705168ceb8a" prot="public" virt="non-virtual"><scope>Servo</scope><name>write</name></member>
      <member refid="class_servo_1af69aba052f5907ef7fc3b6159e3b7726" prot="public" virt="non-virtual"><scope>Servo</scope><name>write</name></member>
      <member refid="class_servo_1ac7fe3d6d2ea285ead98814bcfc417029" prot="public" virt="non-virtual"><scope>Servo</scope><name>writeMicroseconds</name></member>
      <member refid="class_servo_1a7d35c33a26697722dc0c7e6cdb66d299" prot="public" virt="non-virtual"><scope>Servo</scope><name>writeMicroseconds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
