<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_double___action" kind="class" language="C++" prot="public">
    <compoundname>Double_Action</compoundname>
    <basecompoundref refid="class_action" prot="public" virt="non-virtual">Action</basecompoundref>
    <derivedcompoundref refid="class_recallage___action" prot="public" virt="non-virtual">Recallage_Action</derivedcompoundref>
    <derivedcompoundref refid="class_send___order___action" prot="public" virt="non-virtual">Send_Order_Action</derivedcompoundref>
    <derivedcompoundref refid="class_straight_to___action" prot="public" virt="non-virtual">StraightTo_Action</derivedcompoundref>
    <includes refid="_actions_8h" local="no">Actions.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_double___action_1ab027da4d0e91a7b057a4915087908531" prot="protected" static="no" mutable="no">
        <type><ref refid="class_action" kindref="compound">Action</ref> *</type>
        <definition>Action* Double_Action::action1</definition>
        <argsstring></argsstring>
        <name>action1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="106" column="12" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_double___action_1ae3958355ab2906e09020975ec34a7181" prot="protected" static="no" mutable="no">
        <type><ref refid="class_action" kindref="compound">Action</ref> *</type>
        <definition>Action* Double_Action::action2</definition>
        <argsstring></argsstring>
        <name>action2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="107" column="12" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_double___action_1aac46b3f8dad147fde4f7934e6f86649d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Double_Action::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <reimplements refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7">start</reimplements>
        <reimplementedby refid="class_straight_to___action_1a0f46eb20b076167e4e659076e24080b5">start</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The start function is called once at action&apos;s beginning, if the action requirement did not fail. Else the fail is immediate. Is the action is interrupted by <ref refid="class_sequence_1a77dcfee1093388c7b283c5ebcd0556fc" kindref="member">Sequence::pause</ref>, start function will be re-called during resume. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="110" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_double___action_1a5d7683eb93c3ec650695e84426d910ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Double_Action::isFinished</definition>
        <argsstring>()</argsstring>
        <name>isFinished</name>
        <reimplements refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b">isFinished</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IsFinished is called endlessly. Returns if the action is done. Can also be an update function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="111" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_double___action_1aa287df168e59626573cb6a20ef827f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Double_Action::hasFailed</definition>
        <argsstring>()</argsstring>
        <name>hasFailed</name>
        <reimplements refid="class_action_1a82a24a3b95fb310326e649402fbcef11">hasFailed</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HasFailed is called endlessly. Returns if the action failed and should be left aside. The sequence will remember the function failed (useful for requirement). By default, an action fails if it exceeds the time duration allowed by the timer. <simplesect kind="note"><para>A timeout set to -1 indicates the action has an unlimited time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="112" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_double___action_1a3443c27e08e7af8bd8b4380ecf67c8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Double_Action::doAtEnd</definition>
        <argsstring>() override</argsstring>
        <name>doAtEnd</name>
        <reimplements refid="class_action_1a2d8cdbdc551331ea33f6661837e32904">doAtEnd</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called in case of success. Do not do anything by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="113" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_double___action_1a29adf8e0933045ce8fa1f0fb2701c73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Double_Action::Double_Action</definition>
        <argsstring>(float timeout, String name=&quot;Twin&quot;, int16_t require=NO_REQUIREMENT)</argsstring>
        <name>Double_Action</name>
        <param>
          <type>float</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
          <defval>&quot;Twin&quot;</defval>
        </param>
        <param>
          <type>int16_t</type>
          <declname>require</declname>
          <defval>NO_REQUIREMENT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="114" column="5" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class instantiates a double action. A double action is a sequence of two consecutive actions. The handle of those actions is encapsulated. There is nothing to do in particular. A double action is finished if both actions is finished. A double action fails if at least one of them fails. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Action</label>
        <link refid="class_action"/>
      </node>
      <node id="1">
        <label>Double_Action</label>
        <link refid="class_double___action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Recallage_Action</label>
        <link refid="class_recallage___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Send_Order_Action</label>
        <link refid="class_send___order___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>StraightTo_Action</label>
        <link refid="class_straight_to___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Action</label>
        <link refid="class_action"/>
        <childnode refid="3" relation="usage">
          <edgelabel>robot</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mySequence</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>Asservissement</label>
        <link refid="class_asservissement"/>
      </node>
      <node id="6">
        <label>Cinetique</label>
        <link refid="class_cinetique"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Codeuse</label>
        <link refid="class_codeuse"/>
      </node>
      <node id="13">
        <label>Communication</label>
        <link refid="class_communication"/>
      </node>
      <node id="1">
        <label>Double_Action</label>
        <link refid="class_double___action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>action1</edgelabel>
          <edgelabel>action2</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Ghost</label>
        <link refid="class_ghost"/>
        <childnode refid="6" relation="usage">
          <edgelabel>cinetiqueController</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Motor</label>
        <link refid="class_motor"/>
      </node>
      <node id="4">
        <label>Odometrie</label>
        <link refid="class_odometrie"/>
        <childnode refid="5" relation="usage">
          <edgelabel>codeuseDroite</edgelabel>
          <edgelabel>codeuseGauche</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Robot</label>
        <link refid="class_robot"/>
        <childnode refid="4" relation="usage">
          <edgelabel>odometrie</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cinetiqueCurrent</edgelabel>
          <edgelabel>cinetiqueNext</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>motorLeft</edgelabel>
          <edgelabel>motorRight</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>sequences</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ghost</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>controller</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>commActionneurs</edgelabel>
          <edgelabel>communication</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Sequence</label>
        <link refid="class_sequence"/>
      </node>
      <node id="8">
        <label>Vector</label>
        <link refid="class_vector"/>
      </node>
      <node id="7">
        <label>VectorE</label>
        <link refid="class_vector_e"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="103" column="1" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="104" bodyend="115"/>
    <listofallmembers>
      <member refid="class_action_1a28dfd4b726854360b99c8bda70e7da6d" prot="public" virt="non-virtual"><scope>Double_Action</scope><name>Action</name></member>
      <member refid="class_double___action_1ab027da4d0e91a7b057a4915087908531" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>action1</name></member>
      <member refid="class_double___action_1ae3958355ab2906e09020975ec34a7181" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>action2</name></member>
      <member refid="class_double___action_1a3443c27e08e7af8bd8b4380ecf67c8ce" prot="public" virt="virtual"><scope>Double_Action</scope><name>doAtEnd</name></member>
      <member refid="class_action_1a169d6ae96ebfe59864f7936d964f4604" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>done</name></member>
      <member refid="class_double___action_1a29adf8e0933045ce8fa1f0fb2701c73f" prot="public" virt="non-virtual"><scope>Double_Action</scope><name>Double_Action</name></member>
      <member refid="class_double___action_1aa287df168e59626573cb6a20ef827f69" prot="public" virt="virtual"><scope>Double_Action</scope><name>hasFailed</name></member>
      <member refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" prot="public" virt="non-virtual"><scope>Double_Action</scope><name>hasStarted</name></member>
      <member refid="class_double___action_1a5d7683eb93c3ec650695e84426d910ee" prot="public" virt="virtual"><scope>Double_Action</scope><name>isFinished</name></member>
      <member refid="class_action_1ab7d4c5ae380f7457d22a4b77575e7a70" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>mySequence</name></member>
      <member refid="class_action_1aa4672a5030b15430c86b33903609d172" prot="public" virt="non-virtual"><scope>Double_Action</scope><name>name</name></member>
      <member refid="class_action_1a722960e240576a3c6192f6783df7d1fe" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>require</name></member>
      <member refid="class_action_1ad6ddf3a19a26193c69a64a37dbffb27a" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>robot</name></member>
      <member refid="class_action_1a80945e7aeba19e727952b9dd3059c99f" prot="public" virt="non-virtual"><scope>Double_Action</scope><name>setPointer</name></member>
      <member refid="class_double___action_1aac46b3f8dad147fde4f7934e6f86649d" prot="public" virt="virtual"><scope>Double_Action</scope><name>start</name></member>
      <member refid="class_action_1a377ebdc2c58b64af1978a64e7ca0c399" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>started</name></member>
      <member refid="class_action_1a393f04c3c18e212220fd56cca4fcd4c9" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>timeout</name></member>
      <member refid="class_action_1af0308aeb6255207896180aec072f8b88" prot="protected" virt="non-virtual"><scope>Double_Action</scope><name>timeStarted</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
