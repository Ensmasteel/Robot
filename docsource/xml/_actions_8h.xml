<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_actions_8h" kind="file" language="C++">
    <compoundname>Actions.h</compoundname>
    <includes refid="_vector_8h" local="yes">Vector.h</includes>
    <includes local="yes">Arduino.h</includes>
    <includes refid="_move_profile_8h" local="yes">MoveProfile.h</includes>
    <includes refid="_communication_8h" local="yes">Communication.h</includes>
    <includes refid="_sequence_name_8h" local="yes">SequenceName.h</includes>
    <includes refid="_error_manager_8h" local="yes">ErrorManager.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdint</includes>
    <includedby refid="_actions_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp</includedby>
    <includedby refid="_functions_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Functions.cpp</includedby>
    <includedby refid="_sequence_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Sequence.cpp</includedby>
    <includedby refid="_robot_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/lib/Robot/Robot.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="7">
        <label>Communication.h</label>
        <link refid="_communication_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>MessageID.h</label>
        <link refid="_message_i_d_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>MoveProfile.h</label>
        <link refid="_move_profile_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SequenceName.h</label>
        <link refid="_sequence_name_8h_source"/>
      </node>
      <node id="4">
        <label>Logger.h</label>
        <link refid="_logger_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ErrorManager.h</label>
        <link refid="_error_manager_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h</label>
        <link refid="_actions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Print.h</label>
      </node>
      <node id="10">
        <label>Stream.h</label>
      </node>
      <node id="14">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_action" prot="public">Action</innerclass>
    <innerclass refid="class_double___action" prot="public">Double_Action</innerclass>
    <innerclass refid="class_move___action" prot="public">Move_Action</innerclass>
    <innerclass refid="class_goto___action" prot="public">Goto_Action</innerclass>
    <innerclass refid="class_spin___action" prot="public">Spin_Action</innerclass>
    <innerclass refid="class_rotate___action" prot="public">Rotate_Action</innerclass>
    <innerclass refid="class_forward___action" prot="public">Forward_Action</innerclass>
    <innerclass refid="class_backward___action" prot="public">Backward_Action</innerclass>
    <innerclass refid="class_straight_to___action" prot="public">StraightTo_Action</innerclass>
    <innerclass refid="class_brake___action" prot="public">Brake_Action</innerclass>
    <innerclass refid="class_send___action" prot="public">Send_Action</innerclass>
    <innerclass refid="class_wait___message___action" prot="public">Wait_Message_Action</innerclass>
    <innerclass refid="class_switch___message___action" prot="public">Switch_Message_Action</innerclass>
    <innerclass refid="class_send___order___action" prot="public">Send_Order_Action</innerclass>
    <innerclass refid="class_sleep___action" prot="public">Sleep_Action</innerclass>
    <innerclass refid="class_null___action" prot="public">Null_Action</innerclass>
    <innerclass refid="class_end___action" prot="public">End_Action</innerclass>
    <innerclass refid="class_do___action" prot="public">Do_Action</innerclass>
    <innerclass refid="class_pause_seq___action" prot="public">PauseSeq_Action</innerclass>
    <innerclass refid="class_resume_seq___action" prot="public">ResumeSeq_Action</innerclass>
    <innerclass refid="class_wait___error___action" prot="public">Wait_Error_Action</innerclass>
    <innerclass refid="class_recallage___action" prot="public">Recallage_Action</innerclass>
    <innerclass refid="class_wait___tirette___action" prot="public">Wait_Tirette_Action</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_actions_8h_1a5c1f3d2ee4e0c9ff42a087afdfa25433" prot="public" static="no">
        <name>NO_REQUIREMENT</name>
        <initializer>INT16_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="21" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_actions_8h_1a3f67c07e446c9e797349f4b7f639ac28" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Fct) (Robot *robot)</definition>
        <argsstring>)(Robot *robot)</argsstring>
        <name>Fct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="18" column="9" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ACTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTIONS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MoveProfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Communication.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SequenceName.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ErrorManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//for<sp/>macro<sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_robot" kindref="compound">Robot</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sequence" kindref="compound">Sequence</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*Fct)(<ref refid="class_robot" kindref="compound">Robot</ref><sp/>*robot);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>GENERIQUES========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NO_REQUIREMENT<sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="class_action_1aa4672a5030b15430c86b33903609d172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/><ref refid="class_action_1aa4672a5030b15430c86b33903609d172" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b" kindref="member">isFinished</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>done;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">hasFailed</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_action_1a80945e7aeba19e727952b9dd3059c99f" kindref="member">setPointer</ref>(<ref refid="class_robot" kindref="compound">Robot</ref><sp/>*robot);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_action_1a28dfd4b726854360b99c8bda70e7da6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a28dfd4b726854360b99c8bda70e7da6d" kindref="member">Action</ref>(String<sp/><ref refid="class_action_1aa4672a5030b15430c86b33903609d172" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Action&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>0.1,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/><ref refid="class_action_1aa4672a5030b15430c86b33903609d172" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeout<sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;require<sp/>=<sp/>require;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>started<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" kindref="member">hasStarted</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>started;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_action_1a2d8cdbdc551331ea33f6661837e32904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_action_1a2d8cdbdc551331ea33f6661837e32904" kindref="member">doAtEnd</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*Ne<sp/>fait<sp/>rien<sp/>par<sp/>défaut.<sp/>Il<sp/>faudra<sp/>override<sp/>plus<sp/>tard*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>started;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeStarted;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_robot" kindref="compound">Robot</ref><sp/>*robot;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*mySequence;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>require;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sequence" kindref="compound">Sequence</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_double___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_double___action" kindref="compound">Double_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action" kindref="compound">Action</ref><sp/>*action1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action" kindref="compound">Action</ref><sp/>*action2;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1aac46b3f8dad147fde4f7934e6f86649d" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1a5d7683eb93c3ec650695e84426d910ee" kindref="member">isFinished</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1aa287df168e59626573cb6a20ef827f69" kindref="member">hasFailed</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1a3443c27e08e7af8bd8b4380ecf67c8ce" kindref="member">doAtEnd</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>String<sp/><ref refid="class_action_1aa4672a5030b15430c86b33903609d172" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Twin&quot;</highlight><highlight class="normal">,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>MOVES========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_move___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_move___action" kindref="compound">Move_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref><sp/></highlight><highlight class="comment">//Classe<sp/>abstraite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">start</ref>();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(Action+Move)Dump<sp/>les<sp/>parametres<sp/>dans<sp/>le<sp/>ghost<sp/>et<sp/>appelle<sp/>Action::start()<sp/>et<sp/>debloque<sp/>le<sp/>ghost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a6bdc7828e769bd5cd12fcb42b30807d0" kindref="member">isFinished</ref>();<sp/></highlight><highlight class="comment">//(Move)<sp/>Verifie<sp/>que<sp/>le<sp/>ghost<sp/>est<sp/>arrive<sp/>et<sp/>que<sp/>le<sp/>robot<sp/>est<sp/>sur<sp/>le<sp/>ghost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1ae52a50ebb8ef41c1436c4c209a430a09" kindref="member">hasFailed</ref>();<sp/><sp/></highlight><highlight class="comment">//(Action+Move)<sp/>Verifie<sp/>que<sp/>le<sp/>pid<sp/>n&apos;a<sp/>pas<sp/>retourné<sp/>d&apos;erreur<sp/>ou<sp/>que<sp/>Action::hasFailed<sp/>n&apos;est<sp/>pas<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a04c6d71f3a87e4f201d8daf6af917dee" kindref="member">doAtEnd</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref><sp/>posFinal,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaCurve,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveProfileName<sp/>profileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pureRotation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backward,<sp/>String<sp/><ref refid="class_action_1aa4672a5030b15430c86b33903609d172" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Move&quot;</highlight><highlight class="normal">,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref><sp/>posFinal;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaCurve;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>MoveProfileName<sp/>profileName;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pureRotation,<sp/>backward;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_goto___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_goto___action" kindref="compound">Goto_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goto___action" kindref="compound">Goto_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref><sp/>target,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaCurve,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveProfileName<sp/>profileName,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backward<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isFinished<sp/>(Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed<sp/>(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="class_spin___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spin___action" kindref="compound">Spin_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spin___action" kindref="compound">Spin_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref><sp/>target,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spin___action_1a3882bdfcf8262e22c4e71b2d9ef4e5cc" kindref="member">start</ref>();<sp/></highlight><highlight class="comment">//(Action<sp/>+<sp/>Spin)<sp/>Le<sp/>start<sp/>doit<sp/>etre<sp/>redéfini<sp/>car<sp/>on<sp/>ne<sp/>connait<sp/>pas<sp/>posFinal<sp/>a<sp/>l&apos;avance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isFinished(Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_rotate___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_rotate___action" kindref="compound">Rotate_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref><sp/></highlight><highlight class="comment">//Tourne<sp/>en<sp/>relatif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTheta;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rotate___action" kindref="compound">Rotate_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTheta,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_rotate___action_1a82ca14c8704f027ec4108c034514ed1e" kindref="member">start</ref>();<sp/></highlight><highlight class="comment">//(Action<sp/>+<sp/>Spin)<sp/>Le<sp/>start<sp/>doit<sp/>etre<sp/>redéfini<sp/>car<sp/>on<sp/>ne<sp/>connait<sp/>pas<sp/>posFinal<sp/>a<sp/>l&apos;avance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isFinished(Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_forward___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_forward___action" kindref="compound">Forward_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_forward___action" kindref="compound">Forward_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_forward___action_1a70fc0a87198c554f1b93940f3ed0051d" kindref="member">start</ref>();<sp/></highlight><highlight class="comment">//(Action<sp/>+<sp/>Forward)Le<sp/>start<sp/>doit<sp/>etre<sp/>redéfini<sp/>car<sp/>on<sp/>ne<sp/>connait<sp/>pas<sp/>posFinal<sp/>a<sp/>l&apos;avance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isFinished(Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_backward___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_backward___action" kindref="compound">Backward_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref></highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_backward___action" kindref="compound">Backward_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1a9592f176269cf3ad8877f349631ca1b4" kindref="member">start</ref>();<sp/></highlight><highlight class="comment">//(Action<sp/>+<sp/>Backward)Le<sp/>start<sp/>doit<sp/>etre<sp/>redéfini<sp/>car<sp/>on<sp/>ne<sp/>connait<sp/>pas<sp/>posFinal<sp/>a<sp/>l&apos;avance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1a5d51dbcc69485283babaacbcefec1b21" kindref="member">isFinished</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1acd5d5be5f21f69a8b39af514145d95f8" kindref="member">hasFailed</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action+Move)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_straight_to___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_straight_to___action" kindref="compound">StraightTo_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref></highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spin___action" kindref="compound">Spin_Action</ref><sp/>*spin;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_goto___action" kindref="compound">Goto_Action</ref><sp/>*goTo;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>MoveProfileName<sp/>profileName;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_straight_to___action_1a0f46eb20b076167e4e659076e24080b5" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_straight_to___action" kindref="compound">StraightTo_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_target_vector" kindref="compound">TargetVector</ref><sp/>target,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="class_brake___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_brake___action" kindref="compound">Brake_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_brake___action" kindref="compound">Brake_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_brake___action_1ac12a69bd60cae53f1b21522325c9dae4" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>COMM========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="class_send___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_send___action" kindref="compound">Send_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_message" kindref="compound">Message</ref><sp/>message;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>_commLocal;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_send___action" kindref="compound">Send_Action</ref>(<ref refid="struct_message" kindref="compound">Message</ref><sp/>message,<sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>comm,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_send___action_1a6f93337d56933a890c1189f20af824fa" kindref="member">start</ref>();<sp/></highlight><highlight class="comment">//(Action+Send)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//isFinished(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_wait___message___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wait___message___action" kindref="compound">Wait_Message_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageID<sp/>messageId;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>_commLocal;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wait___message___action" kindref="compound">Wait_Message_Action</ref>(MessageID<sp/>messageId,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>comm,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___message___action_1a3fa2293c84671cc0b98c04d512d45ecf" kindref="member">isFinished</ref>();<sp/></highlight><highlight class="comment">//(Wait_Message)<sp/>verifie<sp/>que<sp/>le<sp/>message<sp/>est<sp/>recu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_switch___message___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_switch___message___action" kindref="compound">Switch_Message_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MessageID&gt;<sp/>onMessage;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Fct&gt;<sp/>doFct;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>size;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>_commLocal;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_switch___message___action" kindref="compound">Switch_Message_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_communication" kindref="compound">Communication</ref>*<sp/>comm,<sp/>int16_t<sp/>require);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addPair(MessageID<sp/>messageId,<sp/>Fct<sp/>fct);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>:<sp/>inherited<sp/>from<sp/>Action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_switch___message___action_1a94155ed47d3b75155c67caf5176104aa" kindref="member">isFinished</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//has<sp/>failed<sp/>:<sp/>inherited<sp/>from<sp/>Action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_send___order___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_send___order___action" kindref="compound">Send_Order_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_send___action" kindref="compound">Send_Action</ref>*<sp/>sendAction;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wait___message___action" kindref="compound">Wait_Message_Action</ref>*<sp/>waitAction;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_message" kindref="compound">Message</ref><sp/>message;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_send___order___action" kindref="compound">Send_Order_Action</ref>(MessageID<sp/>actuatorID,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Actuator_Order<sp/>actuatorOrder,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_communication" kindref="compound">Communication</ref><sp/>*comm,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>waitCompletion,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>MISC========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="class_sleep___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sleep___action" kindref="compound">Sleep_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeToWait;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sleep___action" kindref="compound">Sleep_Action</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeToWait,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sleep___action_1a2dba37ac963b41b36ce043a6f32a91a7" kindref="member">isFinished</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(Sleep)<sp/>verifie<sp/>que<sp/>le<sp/>temps<sp/>prévu<sp/>s&apos;est<sp/>ecoulé</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="class_sleep___action_1a9b2c383ba14fb557753ee07cda8b831f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sleep___action_1a9b2c383ba14fb557753ee07cda8b831f" kindref="member">hasFailed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//(Sleep)<sp/>on<sp/>en<sp/>peut<sp/>pas<sp/>fail<sp/>d&apos;attendre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="class_null___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_null___action" kindref="compound">Null_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_null___action" kindref="compound">Null_Action</ref>();</highlight></codeline>
<codeline lineno="353" refid="class_null___action_1a5ef08097e316435552daf168bb95bc6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_null___action_1a5ef08097e316435552daf168bb95bc6b" kindref="member">isFinished</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="354" refid="class_null___action_1a972d555c7cebec548229e28742ff8493" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_null___action_1a972d555c7cebec548229e28742ff8493" kindref="member">hasFailed</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="class_end___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_end___action" kindref="compound">End_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref><sp/></highlight><highlight class="comment">//Une<sp/>End_Action<sp/>ne<sp/>passe<sp/>jamais<sp/>a<sp/>la<sp/>suite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pause;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_end___action" kindref="compound">End_Action</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pause<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_end___action_1aad151db7bde008e76cfa5e22197112d0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="374" refid="class_end___action_1a32a9535c29bc2feaca200d57fd5c3835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_end___action_1a32a9535c29bc2feaca200d57fd5c3835" kindref="member">isFinished</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>done;<sp/>}</highlight></codeline>
<codeline lineno="375" refid="class_end___action_1a5df9ad29a4343e3e4603ed1667b94ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_end___action_1a5df9ad29a4343e3e4603ed1667b94ed6" kindref="member">hasFailed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_do___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_do___action" kindref="compound">Do_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>Fct<sp/>functionToCall;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_do___action_1a28e1938a014380f0d4098fe0c11e71ce" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_do___action" kindref="compound">Do_Action</ref>(Fct<sp/>functionToCall,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_action_1a28dfd4b726854360b99c8bda70e7da6d" kindref="member">Action</ref>(</highlight><highlight class="stringliteral">&quot;DoAc&quot;</highlight><highlight class="normal">,<sp/>0.1,<sp/>require)<sp/>{<sp/>this-&gt;functionToCall<sp/>=<sp/>functionToCall;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_pause_seq___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pause_seq___action" kindref="compound">PauseSeq_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>SequenceName<sp/>nameSeq;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pause_seq___action_1a7993501a1f5b396852844da7e1fa5e69" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pause_seq___action" kindref="compound">PauseSeq_Action</ref>(SequenceName<sp/>nameSeq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="class_resume_seq___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_resume_seq___action" kindref="compound">ResumeSeq_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>SequenceName<sp/>nameSeq;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_resume_seq___action_1ad1c47e0c5aa21d38a16fdb2bb0f9407e" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_resume_seq___action" kindref="compound">ResumeSeq_Action</ref>(SequenceName<sp/>nameSeq,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_wait___error___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wait___error___action" kindref="compound">Wait_Error_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>Error<sp/>error;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wait___error___action" kindref="compound">Wait_Error_Action</ref>(Error<sp/>error,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>start();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___error___action_1a52d821062719ac34012f0d735292a46c" kindref="member">isFinished</ref>();<sp/></highlight><highlight class="comment">//(Wait_Error)<sp/>verifie<sp/>que<sp/>l&apos;erreur<sp/>s&apos;est<sp/>produite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hasFailed(Action)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_recallage___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recallage___action" kindref="compound">Recallage_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref></highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recallage___action" kindref="compound">Recallage_Action</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arriere,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">};</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>INPUT========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="class_wait___tirette___action" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wait___tirette___action" kindref="compound">Wait_Tirette_Action</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>pinIN;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_wait___tirette___action" kindref="compound">Wait_Tirette_Action</ref>(uint8_t<sp/>pinIN,<sp/>int16_t<sp/>require<sp/>=<sp/>NO_REQUIREMENT);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wait___tirette___action_1a085ae6d8d59d25385c0e7b49f0e34616" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___tirette___action_1afc60fc24eb07b790ef6386ca5cb40342" kindref="member">isFinished</ref>();</highlight></codeline>
<codeline lineno="459" refid="class_wait___tirette___action_1a0a924abbdf802411df11a8d8410808b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___tirette___action_1a0a924abbdf802411df11a8d8410808b5" kindref="member">hasFailed</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>On<sp/>ne<sp/>peut<sp/>pas<sp/>fail<sp/>l&apos;attente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!ACTION_H_</highlight></codeline>
    </programlisting>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h"/>
  </compounddef>
</doxygen>
