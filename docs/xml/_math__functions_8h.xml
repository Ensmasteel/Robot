<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_math__functions_8h" kind="file" language="C++">
    <compoundname>Math_functions.h</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includedby refid="_ghost_8h" local="yes">Ensmasteel_Bot_2020/Teensy/lib/Ghost/Ghost.h</includedby>
    <includedby refid="_math__functions_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp</includedby>
    <includedby refid="_teensy_2main_8cpp" local="yes">Ensmasteel_Bot_2020/Teensy/main.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h</label>
        <link refid="_math__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Ghost/Ghost.h</label>
        <link refid="_ghost_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h</label>
        <link refid="_math__functions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Robot/Robot.h</label>
        <link refid="_robot_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Ensmasteel_Bot_2020/Teensy/lib/Robot/RobotSimu.h</label>
        <link refid="_robot_simu_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_polynome" prot="public">Polynome</innerclass>
    <innerclass refid="class_trapezoidal___function" prot="public">Trapezoidal_Function</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_math__functions_8h_1adea63f5775066ec20de11022dcb05d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome init_polynome</definition>
        <argsstring>(float a0=0.0, float a1=0.0, float a2=0.0, float a3=0.0, float a4=0.0, float a5=0.0, float a6=0.0)</argsstring>
        <name>init_polynome</name>
        <param>
          <type>float</type>
          <declname>a0</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a3</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a4</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a5</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>a6</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="31" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="63" bodyend="74" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="31" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1ae2af88862ce81fe9c3a7b05fb7206359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Derivative_ptr</definition>
        <argsstring>(Polynome *P)</argsstring>
        <name>Derivative_ptr</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>pointer on derivative function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="32" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="76" bodyend="85" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1a71a619c3d456114604a527b82a0f2f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Derivative</definition>
        <argsstring>(Polynome P)</argsstring>
        <name>Derivative</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>derivative of the polynomial function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="33" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="87" bodyend="96" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="33" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1a27f86b34743c7ae57e0c2a6cf4b1cc52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Multiplication_ptr</definition>
        <argsstring>(Polynome *P1, Polynome *P2)</argsstring>
        <name>Multiplication_ptr</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P1</declname>
        </param>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P2</declname>
        </param>
        <briefdescription>
<para>Need K[i&gt;=4] = 0 ! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="34" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="98" bodyend="110" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="34" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1ad56e5f80070e290dfae5ec74f4a3901b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Multiplication</definition>
        <argsstring>(Polynome P1, Polynome P2)</argsstring>
        <name>Multiplication</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P1</declname>
        </param>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="35" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="112" bodyend="124" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="35" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1a43fe8fa5827ec9f267595b2b57160e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Square_ptr</definition>
        <argsstring>(Polynome *P)</argsstring>
        <name>Square_ptr</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="36" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="126" bodyend="132" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="36" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1a6b4b4c052515984986f59d5701a17b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Square</definition>
        <argsstring>(Polynome P)</argsstring>
        <name>Square</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="37" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="134" bodyend="140" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="37" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1ad72f36e3db56353097aa6c3e86dc9f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Sum_ptr</definition>
        <argsstring>(Polynome *P1, Polynome *P2)</argsstring>
        <name>Sum_ptr</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P1</declname>
        </param>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref> *</type>
          <declname>P2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="38" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="142" bodyend="151" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="38" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_math__functions_8h_1a60b06fb4d8b9f9bae01e137f5520f645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
        <definition>Polynome Sum</definition>
        <argsstring>(Polynome P1, Polynome P2)</argsstring>
        <name>Sum</name>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P1</declname>
        </param>
        <param>
          <type><ref refid="class_polynome" kindref="compound">Polynome</ref></type>
          <declname>P2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" line="39" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.cpp" bodystart="153" bodyend="162" declfile="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h" declline="39" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MATH_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_polynome" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_polynome" kindref="compound">Polynome</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a3<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a4<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a5<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a6<sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="21" refid="class_polynome_1a3a3c50178a8c0df41d5bcd0c44afd778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_polynome_1a3a3c50178a8c0df41d5bcd0c44afd778" kindref="member">DEGRE_MAX</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_polynome_1a2673e8bb2b601ce3243fc356797de8e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_polynome_1a2673e8bb2b601ce3243fc356797de8e3" kindref="member">K</ref>[<ref refid="class_polynome_1a3a3c50178a8c0df41d5bcd0c44afd778" kindref="member">DEGRE_MAX</ref>];<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_polynome_1a5103725c5ea2d5ebb30b1dbab7c6b9cb" kindref="member">f</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_polynome_1a0182419d4f284852199e7eee0ab75a8e" kindref="member">df</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);<sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="class_polynome_1ac00f8dfa64f26db7f39d8fe2a621a534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_polynome_1ac00f8dfa64f26db7f39d8fe2a621a534" kindref="member">ddf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a3<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a4<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a5<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a6<sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toDebug();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>init_polynome(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a3<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a4<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a5<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a6<sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Derivative_ptr(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P);<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Derivative(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Multiplication_ptr(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P1,<sp/><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P2);<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Multiplication(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P1,<sp/><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P2);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Square_ptr(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Square(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Sum_ptr(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P1,<sp/><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>*P2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>Sum(<ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P1,<sp/><ref refid="class_polynome" kindref="compound">Polynome</ref><sp/>P2);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_trapezoidal___function" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_trapezoidal___function" kindref="compound">Trapezoidal_Function</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_trapezoidal___function" kindref="compound">Trapezoidal_Function</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upRamp<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>downRamp<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GOAL<sp/>/<sp/>Create<sp/>a<sp/>new<sp/>function<sp/>given<sp/>accelerations,<sp/>max<sp/>speed<sp/>and<sp/>the<sp/>integer<sp/>of<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>If<sp/>the<sp/>max<sp/>speed<sp/>is<sp/>unreachable<sp/>given<sp/>ramps<sp/>and<sp/>the<sp/>distance,<sp/>a<sp/>triangle<sp/>function<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IN<sp/><sp/><sp/>/<sp/>float<sp/>upRamp,<sp/>downRamp<sp/>:<sp/>derivative<sp/>at<sp/>the<sp/>beginning<sp/>and<sp/>the<sp/>end<sp/>of<sp/>the<sp/>function<sp/>(downRamp<sp/>is<sp/>positive<sp/>even<sp/>if<sp/>the<sp/>real<sp/>derivative<sp/>is<sp/>indeed<sp/>negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>float<sp/>max<sp/>:<sp/>max<sp/>value<sp/>of<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>float<sp/>distance<sp/>:<sp/>integer<sp/>of<sp/>the<sp/>function<sp/>(name<sp/>given<sp/>in<sp/>reference<sp/>to<sp/>speed<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OUT<sp/><sp/>/<sp/>float<sp/>duration<sp/>:<sp/>(homogeneous<sp/>to<sp/>the<sp/>IN<sp/>variables)<sp/>The<sp/>function<sp/>is<sp/>define<sp/>in<sp/>[0,duration]</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_trapezoidal___function_1a1a31a3acb72a47d405b5491ba0c6105f" kindref="member">set</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upRamp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>downRamp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GOAL<sp/>/<sp/>Create<sp/>a<sp/>new<sp/>constant<sp/>function<sp/>always<sp/>returning<sp/>0</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_trapezoidal___function_1a7d599b15e5658f914bdde13e68362c90" kindref="member">setZero</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GOAL<sp/>/<sp/>Get<sp/>value<sp/>of<sp/>the<sp/>function<sp/>in<sp/>x<sp/>(0<sp/>&lt;<sp/>x<sp/>&lt;<sp/>duration).</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_trapezoidal___function_1a9b07e3899a1f01dbbebafe58581cf9f8" kindref="member">f</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GOAL<sp/>/<sp/>Get<sp/>value<sp/>of<sp/>the<sp/>derivate<sp/>function<sp/>in<sp/>x<sp/>(0<sp/>&lt;<sp/>x<sp/>&lt;<sp/>duration).</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_trapezoidal___function_1ad2990f1d19a20d3d5a37091193f0930d" kindref="member">df</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getDuration();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTriangle();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_triangleFunction<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>computeDuration();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_tMax;<sp/></highlight><highlight class="comment">//time<sp/>when<sp/>f<sp/>reach<sp/>_max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_upRamp,<sp/>_downRamp,<sp/>_max,<sp/>_duration,<sp/>_distance;<sp/></highlight><highlight class="comment">//upRamp<sp/>:<sp/>acceleration<sp/>;<sp/>max<sp/>:<sp/>maximum<sp/>value<sp/>;<sp/>downRamp<sp/>:<sp/>deceleration<sp/>;<sp/>duration<sp/>:<sp/>totale<sp/>duration<sp/>of<sp/>the<sp/>function<sp/>(f(x)!=0<sp/>&lt;=&gt;<sp/>0&lt;x&lt;duration)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/Math_functions/Math_functions.h"/>
  </compounddef>
</doxygen>
