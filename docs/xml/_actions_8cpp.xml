<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_actions_8cpp" kind="file" language="C++">
    <compoundname>Actions.cpp</compoundname>
    <includes refid="_actions_8h" local="yes">Actions.h</includes>
    <includes refid="_robot_8h" local="yes">Robot.h</includes>
    <includes refid="_sequence_8h" local="yes">Sequence.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="8">
        <label>Communication.h</label>
        <link refid="_communication_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>MessageID.h</label>
        <link refid="_message_i_d_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MoveProfile.h</label>
        <link refid="_move_profile_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SequenceName.h</label>
        <link refid="_sequence_name_8h_source"/>
      </node>
      <node id="5">
        <label>Logger.h</label>
        <link refid="_logger_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ErrorManager.h</label>
        <link refid="_error_manager_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Filtre.h</label>
        <link refid="_filtre_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Ghost.h</label>
        <link refid="_ghost_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp</label>
        <link refid="_actions_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Actions.h</label>
        <link refid="_actions_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Codeuse.h</label>
        <link refid="_codeuse_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Encoder.h</label>
        <link refid="_encoder_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Sequence.h</label>
        <link refid="_sequence_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utility/direct_pin_read.h</label>
        <link refid="direct__pin__read_8h_source"/>
      </node>
      <node id="22">
        <label>utility/interrupt_pins.h</label>
        <link refid="interrupt__pins_8h_source"/>
      </node>
      <node id="27">
        <label>Math_functions.h</label>
        <link refid="_math__functions_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Moteur.h</label>
        <link refid="_moteur_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>PID.h</label>
        <link refid="_p_i_d_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Robot.h</label>
        <link refid="_robot_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Print.h</label>
      </node>
      <node id="11">
        <label>Stream.h</label>
      </node>
      <node id="19">
        <label>WProgram.h</label>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="20">
        <label>pins_arduino.h</label>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Actions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Robot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Sequence.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>GENERIQUES========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="class_robot" kindref="compound">Robot</ref><sp/>*Action::robot;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_action_1a80945e7aeba19e727952b9dd3059c99f" kindref="member">Action::setPointer</ref>(<ref refid="class_robot" kindref="compound">Robot</ref><sp/>*robot_)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>robot<sp/>=<sp/>robot_;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStarted<sp/>=<sp/>millis()<sp/>/<sp/>1e3;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>started<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">Action::hasFailed</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>millis()<sp/>/<sp/>1e3<sp/>&gt;<sp/>timeStarted<sp/>+<sp/>timeout;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1a3443c27e08e7af8bd8b4380ecf67c8ce" kindref="member">Double_Action::doAtEnd</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>action2-&gt;<ref refid="class_action_1a2d8cdbdc551331ea33f6661837e32904" kindref="member">doAtEnd</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1aac46b3f8dad147fde4f7934e6f86649d" kindref="member">Double_Action::start</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>action1-&gt;<ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1a5d7683eb93c3ec650695e84426d910ee" kindref="member">Double_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action2-&gt;<ref refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" kindref="member">hasStarted</ref>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action2-&gt;<ref refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b" kindref="member">isFinished</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//On<sp/>s&apos;occupe<sp/>de<sp/>action1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action1-&gt;<ref refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b" kindref="member">isFinished</ref>())<sp/></highlight><highlight class="comment">//Il<sp/>faut<sp/>passer<sp/>à<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action1-&gt;<ref refid="class_action_1a2d8cdbdc551331ea33f6661837e32904" kindref="member">doAtEnd</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action2-&gt;<ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_double___action_1aa287df168e59626573cb6a20ef827f69" kindref="member">Double_Action::hasFailed</ref>()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action2-&gt;<ref refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" kindref="member">hasStarted</ref>())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action2-&gt;<ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">hasFailed</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//On<sp/>s&apos;occupe<sp/>de<sp/>action1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action1-&gt;<ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">hasFailed</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">Double_Action::Double_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>String<sp/>name,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(name,<sp/>timeout,<sp/>require)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;action1<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;action2<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>MOVES========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(</highlight><highlight class="stringliteral">&quot;MOVE<sp/>START&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;<ref refid="class_robot_1a3a45a43ad7dace7c8817c144fad227fa" kindref="member">recalibrateGhost</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>robot-&gt;ghost.<ref refid="class_ghost_1a2332189de8523d9c2c36433192da2689" kindref="member">Compute_Trajectory</ref>(posFinal,<sp/>deltaCurve,<sp/><ref refid="class_move_profiles_1ab77123cf90ad556314e4129fc7d775fb" kindref="member">MoveProfiles::get</ref>(profileName,<sp/>!pureRotation)-&gt;speedRamps,<sp/><ref refid="class_move_profiles_1ab77123cf90ad556314e4129fc7d775fb" kindref="member">MoveProfiles::get</ref>(profileName,<sp/>!pureRotation)-&gt;cruisingSpeed,<sp/>pureRotation,<sp/>backward);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1a2b76efaa0362d362a706bd511169e401" kindref="member">Logger::debugln</ref>(</highlight><highlight class="stringliteral">&quot;Computation<sp/>succeeded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(</highlight><highlight class="stringliteral">&quot;Computation<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;ghost.<ref refid="class_ghost_1a698731ea2bd0f163ef7686a208569af7" kindref="member">Lock</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;controller.setCurrentProfile(profileName);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a04c6d71f3a87e4f201d8daf6af917dee" kindref="member">Move_Action::doAtEnd</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//robot-&gt;controller.sendScoreToTelemetry();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;controller.reset();</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1a6bdc7828e769bd5cd12fcb42b30807d0" kindref="member">Move_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>robot-&gt;ghost.<ref refid="class_ghost_1a5ec1fe41bceee34af769297400340b06" kindref="member">trajectoryIsFinished</ref>()<sp/>&amp;&amp;<sp/>robot-&gt;controller.close;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(</highlight><highlight class="stringliteral">&quot;MOVE<sp/>FINISHED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_move___action_1ae52a50ebb8ef41c1436c4c209a430a09" kindref="member">Move_Action::hasFailed</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">Action::hasFailed</ref>())</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!robot-&gt;controller.close)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(</highlight><highlight class="stringliteral">&quot;MOVE<sp/>FAILED<sp/>:<sp/>robot<sp/>too<sp/>far&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(</highlight><highlight class="stringliteral">&quot;MOVE<sp/>FAILED<sp/>:<sp/>ghost<sp/>not<sp/>finished&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*asser-&gt;tooFar<sp/>||*/</highlight><highlight class="normal"><sp/><ref refid="class_action_1a82a24a3b95fb310326e649402fbcef11" kindref="member">Action::hasFailed</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">Move_Action::Move_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref><sp/>posFinal,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaCurve,<sp/>MoveProfileName<sp/>profileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pureRotation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backward,<sp/>String<sp/>name,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(name,<sp/>timeout,<sp/>require)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;posFinal<sp/>=<sp/>posFinal;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;deltaCurve<sp/>=<sp/>deltaCurve;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;profileName<sp/>=<sp/>profileName;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pureRotation<sp/>=<sp/>pureRotation;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;backward<sp/>=<sp/>backward;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">Goto_Action::Goto_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref><sp/>target,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaCurve,<sp/>MoveProfileName<sp/>profileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>backward,<sp/>int16_t<sp/>require)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/>target.getVectorE(),<sp/>deltaCurve,<sp/>profileName,<sp/>false,<sp/>backward,<sp/></highlight><highlight class="stringliteral">&quot;Goto&quot;</highlight><highlight class="normal">,<sp/>require)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{<sp/></highlight><highlight class="comment">/*Rien<sp/>a<sp/>faire<sp/>d&apos;autre*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">Spin_Action::Spin_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref><sp/>target,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/>target.getVectorE(),<sp/>0.0,<sp/>profileName,<sp/>true,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Spin&quot;</highlight><highlight class="normal">,<sp/>require)<sp/></highlight><highlight class="comment">//x<sp/>et<sp/>y<sp/>seront<sp/>modifié<sp/>par<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Rien<sp/>a<sp/>faire<sp/>d&apos;autre*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spin___action_1a3882bdfcf8262e22c4e71b2d9ef4e5cc" kindref="member">Spin_Action::start</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._x<sp/>=<sp/>robot-&gt;cinetiqueCurrent._x;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref><sp/>=<sp/>robot-&gt;cinetiqueCurrent.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">Rotate_Action::Rotate_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTheta,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref>(0.0,<sp/>0.0,<sp/>0.0),<sp/>0.0,<sp/>profileName,<sp/>true,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Rota&quot;</highlight><highlight class="normal">,<sp/>require)<sp/></highlight><highlight class="comment">//x<sp/>et<sp/>y<sp/>et<sp/>theta<sp/>seront<sp/>modifié<sp/>par<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;deltaTheta<sp/>=<sp/>deltaTheta;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_rotate___action_1a82ca14c8704f027ec4108c034514ed1e" kindref="member">Rotate_Action::start</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._x<sp/>=<sp/>robot-&gt;cinetiqueCurrent._x;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref><sp/>=<sp/>robot-&gt;cinetiqueCurrent.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._theta<sp/>=<sp/>robot-&gt;cinetiqueCurrent._theta<sp/>+<sp/>deltaTheta;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">Forward_Action::Forward_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref>(0.0,<sp/>0.0,<sp/>0.0),<sp/>0.0,<sp/>profileName,<sp/>false,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;Forward&quot;</highlight><highlight class="normal">,<sp/>require)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_forward___action_1a70fc0a87198c554f1b93940f3ed0051d" kindref="member">Forward_Action::start</ref>()</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._theta<sp/>=<sp/>robot-&gt;cinetiqueCurrent._theta;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_logger_1a9a94fd1ce9c8008bfa9dcea344506c57" kindref="member">Logger::infoln</ref>(String(posFinal._theta));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._x<sp/>=<sp/>(robot-&gt;cinetiqueCurrent._x)<sp/>+<sp/>dist<sp/>*<sp/>cos(normalizeAngle(posFinal._theta));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref><sp/>=<sp/>(robot-&gt;cinetiqueCurrent.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>)<sp/>+<sp/>dist<sp/>*<sp/>sin(normalizeAngle(posFinal._theta));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">Backward_Action::Backward_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref>(0.0,<sp/>0.0,<sp/>0.0),<sp/>0.3,<sp/>profileName,<sp/>false,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;Backward&quot;</highlight><highlight class="normal">,<sp/>require)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1a9592f176269cf3ad8877f349631ca1b4" kindref="member">Backward_Action::start</ref>()</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._theta<sp/>=<sp/>robot-&gt;cinetiqueCurrent._theta;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal._x<sp/>=<sp/>(robot-&gt;cinetiqueCurrent._x)<sp/>-<sp/>dist<sp/>*<sp/>cos(normalizeAngle(posFinal._theta));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>posFinal.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref><sp/>=<sp/>(robot-&gt;cinetiqueCurrent.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>)<sp/>-<sp/>dist<sp/>*<sp/>sin(normalizeAngle(posFinal._theta));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1a5d51dbcc69485283babaacbcefec1b21" kindref="member">Backward_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="class_move___action_1a6bdc7828e769bd5cd12fcb42b30807d0" kindref="member">Move_Action::isFinished</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backward___action_1acd5d5be5f21f69a8b39af514145d95f8" kindref="member">Backward_Action::hasFailed</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>out<sp/>=<sp/><ref refid="class_move___action_1ae52a50ebb8ef41c1436c4c209a430a09" kindref="member">Move_Action::hasFailed</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_straight_to___action_1a0f46eb20b076167e4e659076e24080b5" kindref="member">StraightTo_Action::start</ref>()</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//X<sp/>et<sp/>Y<sp/>sont<sp/>déja<sp/>miroiré<sp/>à<sp/>ce<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vector" kindref="compound">Vector</ref><sp/>delta<sp/>=<sp/><ref refid="class_vector" kindref="compound">Vector</ref>(x,<sp/>y)<sp/>-<sp/>robot-&gt;cinetiqueCurrent;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cap<sp/>=<sp/>delta.<ref refid="class_vector_1ac83edd3ce21c2eea555a360f64cf0acc" kindref="member">angle</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>spin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spin___action" kindref="compound">Spin_Action</ref>(timeout,<sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref>(cap,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>profileName);<sp/></highlight><highlight class="comment">//Donc<sp/>il<sp/>faut<sp/>etre<sp/>en<sp/>absolu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>goTo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_goto___action" kindref="compound">Goto_Action</ref>(timeout,<sp/><ref refid="class_target_vector_e" kindref="compound">TargetVectorE</ref>(x,<sp/>y,<sp/>cap,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>0.1,<sp/>profileName);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>action1<sp/>=<sp/>spin;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>action2<sp/>=<sp/>goTo;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_double___action_1aac46b3f8dad147fde4f7934e6f86649d" kindref="member">Double_Action::start</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">StraightTo_Action::StraightTo_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_target_vector" kindref="compound">TargetVector</ref><sp/>target,<sp/>MoveProfileName<sp/>profileName,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref>(timeout,<sp/></highlight><highlight class="stringliteral">&quot;stTo&quot;</highlight><highlight class="normal">,<sp/>require)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vector" kindref="compound">Vector</ref><sp/>targetV<sp/>=<sp/>target.getVector();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;x<sp/>=<sp/>targetV._x;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;y<sp/>=<sp/>targetV.<ref refid="class_vector_1acfd6a472304b3832fd37b4dbf3c90c9b" kindref="member">_y</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;profileName<sp/>=<sp/>profileName;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeout<sp/>=<sp/>timeout;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">Brake_Action::Brake_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_move___action" kindref="compound">Move_Action</ref>(timeout,<sp/><ref refid="class_vector_e" kindref="compound">VectorE</ref>(0,<sp/>0,<sp/>0),<sp/>0.1,<sp/>brake,<sp/>false,<sp/>false,<sp/></highlight><highlight class="stringliteral">&quot;brak&quot;</highlight><highlight class="normal">,<sp/>require)<sp/>{}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_brake___action_1ac12a69bd60cae53f1b21522325c9dae4" kindref="member">Brake_Action::start</ref>()</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;posFinal<sp/>=<sp/>(<ref refid="class_vector_e" kindref="compound">VectorE</ref>)robot-&gt;cinetiqueCurrent;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" kindref="member">Move_Action::start</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>COMM========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">Send_Action::Send_Action(<ref refid="struct_message" kindref="compound">Message</ref><sp/>message,<sp/><ref refid="class_communication" kindref="compound">Communication</ref><sp/>*comm,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;Send&quot;</highlight><highlight class="normal">,<sp/>0.1,<sp/>require)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;message<sp/>=<sp/>message;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_commLocal<sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_send___action_1a6f93337d56933a890c1189f20af824fa" kindref="member">Send_Action::start</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_commLocal-&gt;<ref refid="class_communication_1a431a221c086932c7b4225f6b4d006d17" kindref="member">send</ref>(message);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">Wait_Message_Action::Wait_Message_Action(MessageID<sp/>messageId,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_communication" kindref="compound">Communication</ref><sp/>*comm,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;WaitMess&quot;</highlight><highlight class="normal">,<sp/>timeout,<sp/>require)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;messageId<sp/>=<sp/>messageId;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_commLocal<sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___message___action_1a3fa2293c84671cc0b98c04d512d45ecf" kindref="member">Wait_Message_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_commLocal-&gt;<ref refid="class_communication_1a56745608a76ca04c31e98f6b1e972b63" kindref="member">inWaitingRx</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>extractID(_commLocal-&gt;<ref refid="class_communication_1a71204b613dd598bc5919d57942eef2f2" kindref="member">peekOldestMessage</ref>())<sp/>==<sp/>messageId;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">Switch_Message_Action::Switch_Message_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_communication" kindref="compound">Communication</ref><sp/>*comm,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;swch&quot;</highlight><highlight class="normal">,<sp/>timeout,<sp/>require)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;doFct.clear();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onMessage.clear();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_commLocal<sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Switch_Message_Action::addPair(MessageID<sp/>messageId,<sp/>Fct<sp/>fct)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onMessage.push_back(messageId);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;doFct.push_back(fct);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_switch___message___action_1a94155ed47d3b75155c67caf5176104aa" kindref="member">Switch_Message_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_commLocal-&gt;<ref refid="class_communication_1a56745608a76ca04c31e98f6b1e972b63" kindref="member">inWaitingRx</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extractID(_commLocal-&gt;<ref refid="class_communication_1a71204b613dd598bc5919d57942eef2f2" kindref="member">peekOldestMessage</ref>())<sp/>==<sp/>onMessage[i])</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doFct[i](robot);<sp/></highlight><highlight class="comment">//Les<sp/>functions<sp/>agissent<sp/>sur<sp/>la<sp/>mainSequence<sp/>uniquement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">Send_Order_Action::Send_Order_Action(MessageID<sp/>actuatorID,<sp/>Actuator_Order<sp/>actuatorOrder,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/><ref refid="class_communication" kindref="compound">Communication</ref><sp/>*comm,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>waitCompletion,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref>(timeout,<sp/></highlight><highlight class="stringliteral">&quot;Order&quot;</highlight><highlight class="normal">,require)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>message<sp/>=<sp/>newMessage(actuatorID,<sp/>actuatorOrder,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>sendAction<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_send___action" kindref="compound">Send_Action</ref>(message,<sp/>comm);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>waitAction<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wait___message___action" kindref="compound">Wait_Message_Action</ref>(actuatorID,-1,<sp/>comm);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>action1<sp/>=<sp/>sendAction;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(waitCompletion)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action2<sp/>=<sp/>waitAction;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_null___action" kindref="compound">Null_Action</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>MISC========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">End_Action::End_Action(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loop,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pause,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;End_&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>NO_REQUIREMENT)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;loop<sp/>=<sp/>loop;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pause<sp/>=<sp/>pause;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lockGhost<sp/>=<sp/>lockGhost;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_end___action_1aad151db7bde008e76cfa5e22197112d0" kindref="member">End_Action::start</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Au<sp/>premier<sp/>appel<sp/>de<sp/>start,<sp/>done<sp/>==<sp/>false<sp/>et<sp/>on<sp/>met<sp/>la<sp/>sequence<sp/>en<sp/>pause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sinon,<sp/>done<sp/>==<sp/>true<sp/>et<sp/>alors<sp/>on<sp/>va<sp/>looper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pause<sp/>&amp;&amp;<sp/>!done)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySequence-&gt;<ref refid="class_sequence_1a77dcfee1093388c7b283c5ebcd0556fc" kindref="member">pause</ref>(lockGhost);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loop)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mySequence-&gt;nextIndex<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//Une<sp/>end<sp/>action,<sp/>boucle<sp/>sa<sp/>propre<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_do___action_1a28e1938a014380f0d4098fe0c11e71ce" kindref="member">Do_Action::start</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>functionToCall(robot);<sp/></highlight><highlight class="comment">//Les<sp/>functions<sp/>agissent<sp/>sur<sp/>la<sp/>mainSequence<sp/>uniquement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">Sleep_Action::Sleep_Action(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeToWait,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;ZZzz&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>require)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeToWait<sp/>=<sp/>timeToWait;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sleep___action_1a2dba37ac963b41b36ce043a6f32a91a7" kindref="member">Sleep_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>millis()<sp/>/<sp/>1e3<sp/>-<sp/>timeStarted<sp/>&gt;<sp/>timeToWait;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">Null_Action::Null_Action()<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal">,-1)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">Wait_Error_Action::Wait_Error_Action(Error<sp/>error,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;WaitErr&quot;</highlight><highlight class="normal">,<sp/>timeout,<sp/>require)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;error<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___error___action_1a52d821062719ac34012f0d735292a46c" kindref="member">Wait_Error_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_error_manager_1a1d7ce8b7be01e27f98e2ee30bc972632" kindref="member">ErrorManager::inWaiting</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_error_manager_1abdaf3d2c9a56ceb4d9c75095466ca2fd" kindref="member">ErrorManager::peekOldestError</ref>()<sp/>==<sp/>error;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">PauseSeq_Action::PauseSeq_Action(SequenceName<sp/>nameSeq,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lockGhost,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;paus&quot;</highlight><highlight class="normal">,<sp/>0.1,<sp/>require)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nameSeq<sp/>=<sp/>nameSeq;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lockGhost<sp/>=<sp/>lockGhost;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pause_seq___action_1a7993501a1f5b396852844da7e1fa5e69" kindref="member">PauseSeq_Action::start</ref>()</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;<ref refid="class_robot_1a92dfc164f4b5687a7ffc1dab1cf7bfbe" kindref="member">getSequenceByName</ref>(nameSeq)-&gt;<ref refid="class_sequence_1a77dcfee1093388c7b283c5ebcd0556fc" kindref="member">pause</ref>(lockGhost);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">ResumeSeq_Action::ResumeSeq_Action(SequenceName<sp/>nameSeq,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;resu&quot;</highlight><highlight class="normal">,<sp/>0.1,<sp/>require)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;nameSeq<sp/>=<sp/>nameSeq;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_resume_seq___action_1ad1c47e0c5aa21d38a16fdb2bb0f9407e" kindref="member">ResumeSeq_Action::start</ref>()</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>robot-&gt;<ref refid="class_robot_1a92dfc164f4b5687a7ffc1dab1cf7bfbe" kindref="member">getSequenceByName</ref>(nameSeq)-&gt;<ref refid="class_sequence_1a3eb07e08e59b731d6d950fac7140697e" kindref="member">resume</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="375"><highlight class="comment">*<sp/>/!\<sp/>Le<sp/>timeout<sp/>specifié<sp/>dans<sp/>la<sp/>sequence<sp/>d&apos;ecoute<sp/>&quot;recallageListner&quot;<sp/>doit<sp/>etre<sp/>plus<sp/>petit<sp/>que<sp/>celui<sp/>ci</highlight></codeline>
<codeline lineno="376"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">Recallage_Action::Recallage_Action(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arriere,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)<sp/>:<sp/><ref refid="class_double___action" kindref="compound">Double_Action</ref>(timeout,<sp/></highlight><highlight class="stringliteral">&quot;recal&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>action1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_resume_seq___action" kindref="compound">ResumeSeq_Action</ref>(recallageListerName);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arriere)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_backward___action" kindref="compound">Backward_Action</ref>(timeout,<sp/>dist,<sp/>recallage);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_forward___action" kindref="compound">Forward_Action</ref>(timeout,<sp/>dist,<sp/>recallage);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//========================================ACTION<sp/>INPUT========================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">Wait_Tirette_Action::Wait_Tirette_Action(uint8_t<sp/>pinIN,<sp/>int16_t<sp/>require)<sp/>:<sp/><ref refid="class_action" kindref="compound">Action</ref>(</highlight><highlight class="stringliteral">&quot;Tirette&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>require)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pinIN<sp/>=<sp/>pinIN;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(pinIN,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wait___tirette___action_1a085ae6d8d59d25385c0e7b49f0e34616" kindref="member">Wait_Tirette_Action::start</ref>()</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>initOK<sp/>=<sp/>!digitalRead(pinIN);<sp/></highlight><highlight class="comment">//<sp/>Verifie<sp/>que<sp/>la<sp/>tirette<sp/>est<sp/>branchee<sp/>au<sp/>demarage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7" kindref="member">Action::start</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wait___tirette___action_1afc60fc24eb07b790ef6386ca5cb40342" kindref="member">Wait_Tirette_Action::isFinished</ref>()</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initOK)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digitalRead(pinIN))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger_1ae363ca6abc4efcf0c8b89a4ea520a4a3" kindref="member">Logger::toTelemetry</ref>(</highlight><highlight class="stringliteral">&quot;Tirette&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initOK<sp/>=<sp/>!digitalRead(pinIN);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp"/>
  </compounddef>
</doxygen>
