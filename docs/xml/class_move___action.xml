<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="class_move___action" kind="class" language="C++" prot="public">
    <compoundname>Move_Action</compoundname>
    <basecompoundref refid="class_action" prot="public" virt="non-virtual">Action</basecompoundref>
    <derivedcompoundref refid="class_backward___action" prot="public" virt="non-virtual">Backward_Action</derivedcompoundref>
    <derivedcompoundref refid="class_brake___action" prot="public" virt="non-virtual">Brake_Action</derivedcompoundref>
    <derivedcompoundref refid="class_forward___action" prot="public" virt="non-virtual">Forward_Action</derivedcompoundref>
    <derivedcompoundref refid="class_goto___action" prot="public" virt="non-virtual">Goto_Action</derivedcompoundref>
    <derivedcompoundref refid="class_rotate___action" prot="public" virt="non-virtual">Rotate_Action</derivedcompoundref>
    <derivedcompoundref refid="class_spin___action" prot="public" virt="non-virtual">Spin_Action</derivedcompoundref>
    <includes refid="_actions_8h" local="no">Actions.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_move___action_1ae44dffe88584af9ea9adf3ca77c877fc" prot="protected" static="no" mutable="no">
        <type><ref refid="class_vector_e" kindref="compound">VectorE</ref></type>
        <definition>VectorE Move_Action::posFinal</definition>
        <argsstring></argsstring>
        <name>posFinal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="136" column="13" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_move___action_1a757e2b82bbf44e28df6716c75739417d" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float Move_Action::deltaCurve</definition>
        <argsstring></argsstring>
        <name>deltaCurve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="137" column="11" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_move___action_1aff4597d0d11765e58cc5f75a5e7729ea" prot="protected" static="no" mutable="no">
        <type>MoveProfileName</type>
        <definition>MoveProfileName Move_Action::profileName</definition>
        <argsstring></argsstring>
        <name>profileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="138" column="21" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_move___action_1ac6c160827d09b5270090d2758dbbf32f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Move_Action::pureRotation</definition>
        <argsstring></argsstring>
        <name>pureRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="139" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_move___action_1a47be6dbb0b115d9307707fdc741c86ba" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Move_Action::backward</definition>
        <argsstring></argsstring>
        <name>backward</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="139" column="23" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Move_Action::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <reimplements refid="class_action_1a3e06aaadebfc669ac6ff988e1de9abc7">start</reimplements>
        <reimplementedby refid="class_spin___action_1a3882bdfcf8262e22c4e71b2d9ef4e5cc">start</reimplementedby>
        <reimplementedby refid="class_rotate___action_1a82ca14c8704f027ec4108c034514ed1e">start</reimplementedby>
        <reimplementedby refid="class_forward___action_1a70fc0a87198c554f1b93940f3ed0051d">start</reimplementedby>
        <reimplementedby refid="class_backward___action_1a9592f176269cf3ad8877f349631ca1b4">start</reimplementedby>
        <reimplementedby refid="class_brake___action_1ac12a69bd60cae53f1b21522325c9dae4">start</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The start function is called once at action&apos;s beginning, if the action requirement did not fail. Else the fail is immediate. Is the action is interrupted by <ref refid="class_sequence_1a77dcfee1093388c7b283c5ebcd0556fc" kindref="member">Sequence::pause</ref>, start function will be re-called during resume. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="128" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="68" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_move___action_1a6bdc7828e769bd5cd12fcb42b30807d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Move_Action::isFinished</definition>
        <argsstring>()</argsstring>
        <name>isFinished</name>
        <reimplements refid="class_action_1a3e524a7ba7014522e5111e06cc9b963b">isFinished</reimplements>
        <reimplementedby refid="class_backward___action_1a5d51dbcc69485283babaacbcefec1b21">isFinished</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IsFinished is called endlessly. Returns if the action is done. Can also be an update function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="129" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_move___action_1ae52a50ebb8ef41c1436c4c209a430a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Move_Action::hasFailed</definition>
        <argsstring>()</argsstring>
        <name>hasFailed</name>
        <reimplements refid="class_action_1a82a24a3b95fb310326e649402fbcef11">hasFailed</reimplements>
        <reimplementedby refid="class_backward___action_1acd5d5be5f21f69a8b39af514145d95f8">hasFailed</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HasFailed is called endlessly. Returns if the action failed and should be left aside. The sequence will remember the function failed (useful for requirement). By default, an action fails if it exceeds the time duration allowed by the timer. <simplesect kind="note"><para>A timeout set to -1 indicates the action has an unlimited time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="130" column="18" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="97" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_move___action_1a04c6d71f3a87e4f201d8daf6af917dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Move_Action::doAtEnd</definition>
        <argsstring>() override</argsstring>
        <name>doAtEnd</name>
        <reimplements refid="class_action_1a2d8cdbdc551331ea33f6661837e32904">doAtEnd</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called in case of success. Do not do anything by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="131" column="10" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_move___action_1aa1bee9860097a7455d9b701bbf76a1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Move_Action::Move_Action</definition>
        <argsstring>(float timeout, VectorE posFinal, float deltaCurve, MoveProfileName profileName, bool pureRotation, bool backward, String name=&quot;Move&quot;, int16_t require=NO_REQUIREMENT)</argsstring>
        <name>Move_Action</name>
        <param>
          <type>float</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type><ref refid="class_vector_e" kindref="compound">VectorE</ref></type>
          <declname>posFinal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaCurve</declname>
        </param>
        <param>
          <type>MoveProfileName</type>
          <declname>profileName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pureRotation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backward</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
          <defval>&quot;Move&quot;</defval>
        </param>
        <param>
          <type>int16_t</type>
          <declname>require</declname>
          <defval>NO_REQUIREMENT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="132" column="5" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.cpp" bodystart="113" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A MoveAction will give a new order to the ghost. When start is called, the target position is given to ghost which will then go to it. (so the ghost is unlocked if necessary) By default PIDs are reset at the end of action. <simplesect kind="warning"><para>This class is abstract and cannot be instantiated. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Action</label>
        <link refid="class_action"/>
      </node>
      <node id="3">
        <label>Backward_Action</label>
        <link refid="class_backward___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Brake_Action</label>
        <link refid="class_brake___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Forward_Action</label>
        <link refid="class_forward___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Goto_Action</label>
        <link refid="class_goto___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Move_Action</label>
        <link refid="class_move___action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Rotate_Action</label>
        <link refid="class_rotate___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Spin_Action</label>
        <link refid="class_spin___action"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Action</label>
        <link refid="class_action"/>
        <childnode refid="3" relation="usage">
          <edgelabel>robot</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mySequence</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>Asservissement</label>
        <link refid="class_asservissement"/>
      </node>
      <node id="6">
        <label>Cinetique</label>
        <link refid="class_cinetique"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Codeuse</label>
        <link refid="class_codeuse"/>
      </node>
      <node id="13">
        <label>Communication</label>
        <link refid="class_communication"/>
      </node>
      <node id="11">
        <label>Ghost</label>
        <link refid="class_ghost"/>
        <childnode refid="6" relation="usage">
          <edgelabel>cinetiqueController</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Motor</label>
        <link refid="class_motor"/>
      </node>
      <node id="1">
        <label>Move_Action</label>
        <link refid="class_move___action"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>posFinal</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Odometrie</label>
        <link refid="class_odometrie"/>
        <childnode refid="5" relation="usage">
          <edgelabel>codeuseDroite</edgelabel>
          <edgelabel>codeuseGauche</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Robot</label>
        <link refid="class_robot"/>
        <childnode refid="4" relation="usage">
          <edgelabel>odometrie</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cinetiqueCurrent</edgelabel>
          <edgelabel>cinetiqueNext</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>motorLeft</edgelabel>
          <edgelabel>motorRight</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>sequences</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ghost</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>controller</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>commActionneurs</edgelabel>
          <edgelabel>communication</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Sequence</label>
        <link refid="class_sequence"/>
      </node>
      <node id="8">
        <label>Vector</label>
        <link refid="class_vector"/>
      </node>
      <node id="7">
        <label>VectorE</label>
        <link refid="class_vector_e"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" line="125" column="1" bodyfile="Ensmasteel_Bot_2020/Teensy/lib/LesInseparables/Actions.h" bodystart="126" bodyend="140"/>
    <listofallmembers>
      <member refid="class_action_1a28dfd4b726854360b99c8bda70e7da6d" prot="public" virt="non-virtual"><scope>Move_Action</scope><name>Action</name></member>
      <member refid="class_move___action_1a47be6dbb0b115d9307707fdc741c86ba" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>backward</name></member>
      <member refid="class_move___action_1a757e2b82bbf44e28df6716c75739417d" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>deltaCurve</name></member>
      <member refid="class_move___action_1a04c6d71f3a87e4f201d8daf6af917dee" prot="public" virt="virtual"><scope>Move_Action</scope><name>doAtEnd</name></member>
      <member refid="class_action_1a169d6ae96ebfe59864f7936d964f4604" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>done</name></member>
      <member refid="class_move___action_1ae52a50ebb8ef41c1436c4c209a430a09" prot="public" virt="virtual"><scope>Move_Action</scope><name>hasFailed</name></member>
      <member refid="class_action_1a09d6aee36ccd353f55f073b73dd64f9b" prot="public" virt="non-virtual"><scope>Move_Action</scope><name>hasStarted</name></member>
      <member refid="class_move___action_1a6bdc7828e769bd5cd12fcb42b30807d0" prot="public" virt="virtual"><scope>Move_Action</scope><name>isFinished</name></member>
      <member refid="class_move___action_1aa1bee9860097a7455d9b701bbf76a1fc" prot="public" virt="non-virtual"><scope>Move_Action</scope><name>Move_Action</name></member>
      <member refid="class_action_1ab7d4c5ae380f7457d22a4b77575e7a70" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>mySequence</name></member>
      <member refid="class_action_1aa4672a5030b15430c86b33903609d172" prot="public" virt="non-virtual"><scope>Move_Action</scope><name>name</name></member>
      <member refid="class_move___action_1ae44dffe88584af9ea9adf3ca77c877fc" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>posFinal</name></member>
      <member refid="class_move___action_1aff4597d0d11765e58cc5f75a5e7729ea" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>profileName</name></member>
      <member refid="class_move___action_1ac6c160827d09b5270090d2758dbbf32f" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>pureRotation</name></member>
      <member refid="class_action_1a722960e240576a3c6192f6783df7d1fe" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>require</name></member>
      <member refid="class_action_1ad6ddf3a19a26193c69a64a37dbffb27a" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>robot</name></member>
      <member refid="class_action_1a80945e7aeba19e727952b9dd3059c99f" prot="public" virt="non-virtual"><scope>Move_Action</scope><name>setPointer</name></member>
      <member refid="class_move___action_1a67ba96921f67ba91f6d34f3245bc34c8" prot="public" virt="virtual"><scope>Move_Action</scope><name>start</name></member>
      <member refid="class_action_1a377ebdc2c58b64af1978a64e7ca0c399" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>started</name></member>
      <member refid="class_action_1a393f04c3c18e212220fd56cca4fcd4c9" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>timeout</name></member>
      <member refid="class_action_1af0308aeb6255207896180aec072f8b88" prot="protected" virt="non-virtual"><scope>Move_Action</scope><name>timeStarted</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
